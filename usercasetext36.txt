
Use case name
	BuyOneWayTicket

Participating actor
	Initiated by Traveler

Flow of events
	1.	The Traveler chooses to buy one way ticket
	2.	The Traveler pays
	3.	The ticket is printed

Entry condition
	-	The ticket distributor has change and paper

Exit condition
	-	The Traveler has received the ticker, OR
	-	The Traveler has received an explanation indicating why the transaction can't be completed.

Quality requirements
	-	...


Use case name
	BuyWeeklyCard

Participating actor
	Initiated by Traveler

Flow of events
	1.	The Traveler chooses to buy weekly card
	2.	The Traveler pays
	3.	The card is printed

Entry condition
	-	The ticket distributor has change and paper

Exit condition
	-	The Traveler has received the card, OR
	-	The Traveler has received an explanation indicating why the transaction can't be completed.

Quality requirements
	-	...


Use case name
	BuyMonthlyCard

Participating actor
	Initiated by Traveler

Flow of events
	1.	The Traveler chooses to buy a monthly card
	2.	The Traveler pays
	3.	The card is printed

Entry condition
	-	The ticket distributor has change and paper

Exit condition
	-	The Traveler has received the card, OR
	-	The Traveler has received an explanation indicating why the transaction can't be completed.

Quality requirements
	-	...


Use case name
	UpdateTariff

Participating actor
	Initiated by CentralComputer

Flow of events
	1.	The CentralComputer updates the tariff on the distributor.

Entry condition
	-	There has been changes to the tariff

Exit condition
	-	The Distributors tariff has been updated

Quality requirements
	-	...


Use case name
	DistributorException

Participating actor
	Communicates with Traveler

Flow of events
	...

Entry condition
	-	This use case extends BuyOneWayTicket, BuyWeeklyCard and BuyMonthlyCard use cases. It is initiated whenever a problem occurs, as the Traveler is trying to buy a ticket.

Exit condition
	-	...

Quality requirements
	-	...


Use case name
	TimeOut

Participating actor
	Inherited from DistributorException use case

Flow of events
	1.	Cancel transaction
	2.	notify Traveler that too much time has been spent at one stage of the transaction

Entry condition
	-	Inherited from DistributorException, AND
	-	XX time has been spent on one stage of the transaction.

Exit condition
	-	User has be notified

Quality requirements
	-	...


